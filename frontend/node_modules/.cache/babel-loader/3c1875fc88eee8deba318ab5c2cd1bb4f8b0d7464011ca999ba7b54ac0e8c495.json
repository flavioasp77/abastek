{"ast":null,"code":"var _jsxFileName = \"/home/flavioasp77/Projetos/abastek/frontend/src/components/EquipmentForm.jsx\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { createEquipment, updateEquipment } from '../services/equipmentService';\nimport { useAppContext } from '../context/AppContext';\n\n// Função para formatar a data no formato \"YYYY-MM-DDTHH:mm:ss.sssZ\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDateToISO = dateString => {\n  if (!dateString) return '';\n  const date = new Date(dateString);\n  const now = new Date(); // Obtém a hora atual do sistema\n\n  date.setHours(now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds());\n\n  // Ajusta para o fuso horário do Brasil (UTC-3 ou UTC-2 no horário de verão)\n  return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString();\n};\n\n// Esquema de validação com Yup\nconst EquipmentSchema = Yup.object().shape({\n  code: Yup.string().required('Código é obrigatório').max(20, 'Máximo 20 caracteres'),\n  name: Yup.string().required('Nome é obrigatório').max(100, 'Máximo 100 caracteres'),\n  manufacture_date: Yup.date().required('Data de fabricação é obrigatória')\n});\nexport default function EquipmentForm({\n  equipment,\n  onSuccess\n}) {\n  _s();\n  const {\n    token\n  } = useAppContext();\n  const initialValues = {\n    code: (equipment === null || equipment === void 0 ? void 0 : equipment.code) || '',\n    name: (equipment === null || equipment === void 0 ? void 0 : equipment.name) || '',\n    manufacture_date: (equipment === null || equipment === void 0 ? void 0 : equipment.manufactureDate) || ''\n  };\n  const handleSubmit = async values => {\n    console.log(\"Valores antes do envio:\", values);\n    const formattedValues = {\n      ...values,\n      manufactureDate: formatDateToISO(values.manufacture_date)\n    };\n    console.log(\"Valores formatados para envio:\", formattedValues);\n    try {\n      if (equipment) {\n        await updateEquipment(equipment.id, formattedValues, token);\n        toast.success('Equipamento atualizado com sucesso');\n      } else {\n        await createEquipment(formattedValues, token);\n        toast.success('Equipamento criado com sucesso');\n      }\n      onSuccess();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao salvar equipamento');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: EquipmentSchema,\n    onSubmit: handleSubmit,\n    enableReinitialize: true // Para garantir que os valores sejam atualizados corretamente\n    ,\n    children: ({\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"code\",\n          className: \"form-label\",\n          children: \"C\\xF3digo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"code\",\n          className: \"form-control\",\n          disabled: !!equipment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"code\",\n          component: \"div\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"name\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"div\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"manufacture_date\",\n          className: \"form-label\",\n          children: \"Data de Fabrica\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"date\",\n          name: \"manufacture_date\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"manufacture_date\",\n          component: \"div\",\n          className: \"text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(EquipmentForm, \"GRoSNpkja93wcR18F/7lAhVVWuw=\", false, function () {\n  return [useAppContext];\n});\n_c = EquipmentForm;\nvar _c;\n$RefreshReg$(_c, \"EquipmentForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Button","Yup","toast","createEquipment","updateEquipment","useAppContext","jsxDEV","_jsxDEV","formatDateToISO","dateString","date","Date","now","setHours","getHours","getMinutes","getSeconds","getMilliseconds","getTime","getTimezoneOffset","toISOString","EquipmentSchema","object","shape","code","string","required","max","name","manufacture_date","EquipmentForm","equipment","onSuccess","_s","token","initialValues","manufactureDate","handleSubmit","values","console","log","formattedValues","id","success","error","_error$response","_error$response$data","response","data","message","validationSchema","onSubmit","enableReinitialize","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","component","_c","$RefreshReg$"],"sources":["/home/flavioasp77/Projetos/abastek/frontend/src/components/EquipmentForm.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { createEquipment, updateEquipment } from '../services/equipmentService';\nimport { useAppContext } from '../context/AppContext';\n\n// Função para formatar a data no formato \"YYYY-MM-DDTHH:mm:ss.sssZ\"\nconst formatDateToISO = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  const now = new Date(); // Obtém a hora atual do sistema\n\n  date.setHours(now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds());\n\n  // Ajusta para o fuso horário do Brasil (UTC-3 ou UTC-2 no horário de verão)\n  return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString();\n};\n\n// Esquema de validação com Yup\nconst EquipmentSchema = Yup.object().shape({\n  code: Yup.string().required('Código é obrigatório').max(20, 'Máximo 20 caracteres'),\n  name: Yup.string().required('Nome é obrigatório').max(100, 'Máximo 100 caracteres'),\n  manufacture_date: Yup.date()\n    .required('Data de fabricação é obrigatória'),\n});\n\nexport default function EquipmentForm({ equipment, onSuccess }) {\n  const { token } = useAppContext();\n\n  const initialValues = {\n    code: equipment?.code || '',\n    name: equipment?.name || '',\n    manufacture_date: equipment?.manufactureDate || '',\n  };\n\n  const handleSubmit = async (values) => {\n    console.log(\"Valores antes do envio:\", values);\n\n    const formattedValues = {\n      ...values,\n      manufactureDate: formatDateToISO(values.manufacture_date),\n    };\n\n    console.log(\"Valores formatados para envio:\", formattedValues);\n\n    try {\n      if (equipment) {\n        await updateEquipment(equipment.id, formattedValues, token);\n        toast.success('Equipamento atualizado com sucesso');\n      } else {\n        await createEquipment(formattedValues, token);\n        toast.success('Equipamento criado com sucesso');\n      }\n      onSuccess();\n    } catch (error) {\n      toast.error(error.response?.data?.message || 'Erro ao salvar equipamento');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={EquipmentSchema}\n      onSubmit={handleSubmit}\n      enableReinitialize // Para garantir que os valores sejam atualizados corretamente\n    >\n      {({ values }) => (\n        <Form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"code\" className=\"form-label\">Código</label>\n            <Field type=\"text\" name=\"code\" className=\"form-control\" disabled={!!equipment} />\n            <ErrorMessage name=\"code\" component=\"div\" className=\"text-danger\" />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label\">Nome</label>\n            <Field type=\"text\" name=\"name\" className=\"form-control\" />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"text-danger\" />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"manufacture_date\" className=\"form-label\">Data de Fabricação</label>\n            <Field type=\"date\" name=\"manufacture_date\" className=\"form-control\" />\n            <ErrorMessage name=\"manufacture_date\" component=\"div\" className=\"text-danger\" />\n          </div>\n\n          <Button type=\"submit\">Salvar</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}